[{"/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/index.js":"1","/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/App.js":"2","/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/components/Notification.js":"3","/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/components/Blog.js":"4","/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/components/blogForm.js":"5","/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/components/LoginForm.js":"6","/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/services/blogs.js":"7","/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/components/Togglable.js":"8","/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/services/login.js":"9"},{"size":161,"mtime":1646193933010,"results":"10","hashOfConfig":"11"},{"size":4912,"mtime":1646193933009,"results":"12","hashOfConfig":"11"},{"size":190,"mtime":1646193933010,"results":"13","hashOfConfig":"11"},{"size":1625,"mtime":1646193933009,"results":"14","hashOfConfig":"11"},{"size":1120,"mtime":1646193933010,"results":"15","hashOfConfig":"11"},{"size":703,"mtime":1646193933010,"results":"16","hashOfConfig":"11"},{"size":888,"mtime":1646193933010,"results":"17","hashOfConfig":"11"},{"size":622,"mtime":1646193933010,"results":"18","hashOfConfig":"11"},{"size":203,"mtime":1646193933010,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3pypn6",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/index.js",[],"/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/App.js",["41"],"import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/blogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [message, setMessage] = useState('')\n  const [style, setStyle] = useState('')\n  const handleLogout = async () => {\n    setUsername('')\n    setPassword('')\n    setUser(null)\n    window.localStorage.removeItem('blogToken')\n  }\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      })\n      setUser(user)\n      setUsername(user.username)\n      setPassword('')\n      window.localStorage.setItem('blogToken', JSON.stringify(user))\n      setStyle('success')\n      setMessage('Logged in successfully')\n      setTimeout(() => {\n        setMessage('')\n      }, 4000)\n    } catch (exepction) {\n      setStyle('error')\n      setMessage('Wrong username or password')\n      setTimeout(() => {\n        setMessage('')\n      }, 4000)\n    }\n  }\n  const deleteBlog = (delBlog) => {\n    try {\n      const updatedBlogs = blogs.filter((blog) => blog.id !== delBlog.id)\n      updatedBlogs.sort((a, b) => {\n        if (a.likes < b.likes) {\n          return 1\n        } else if (a.likes > b.likes) {\n          return -1\n        }\n        return 0\n      })\n      setBlogs(updatedBlogs)\n      setStyle('success')\n      setMessage(`Blog ${delBlog.title} has been deleted`)\n      setTimeout(() => {\n        setMessage('')\n      }, 4000)\n    } catch (e) {\n      setStyle('error')\n      setMessage('There was an error deleting the blog')\n      setTimeout(() => {\n        setMessage('')\n      }, 4000)\n    }\n  }\n  const updateBlog=async (blog) => {\n    const newBlog=await blogService.updateBlog(blog,user.token)\n    const updatedBlogs=blogs.map((b) => {\n      if(b.id===newBlog.id){\n        return newBlog\n      }\n      return b\n    })\n    updatedBlogs.sort((a, b) => {\n      if (a.likes < b.likes) {\n        return 1\n      } else if (a.likes > b.likes) {\n        return -1\n      }\n      return 0\n    })\n    setBlogs(updatedBlogs)\n  }\n  useEffect(async () => {\n    const blogsFromsv = await blogService.getAll()\n    blogsFromsv.sort((a, b) => {\n      if (a.likes < b.likes) {\n        return 1\n      } else if (a.likes > b.likes) {\n        return -1\n      }\n      return 0\n    })\n    setBlogs(blogsFromsv)\n  }, [])\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('blogToken')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n  const handleCreate=async(blog) => {\n    try{\n      const blogToPost={\n        title:blog.title,\n        author:blog.author,\n        url:blog.url\n      }\n      console.log(user.token)\n      const newBlog= await blogService.postBlog(blogToPost,user.token)\n      newBlog.user=user\n      setBlogs(blogs.concat(newBlog))\n      setStyle('success')\n      setMessage(`A new blog ${newBlog.title} by ${newBlog.author} added`)\n      setTimeout(() => {  setMessage('') }, 4000)\n    } catch (exception){\n      setStyle('error')\n      setMessage('The blog couldn\\'t be added')\n      setTimeout(() => {  setMessage('') }, 4000)\n    }\n  }\n  if (user === null) {\n    return (\n      <>\n        <Notification message={message} style={style} />\n        <LoginForm\n          username={username}\n          password={password}\n          setPassword={setPassword}\n          setUsername={setUsername}\n          handleLogin={handleLogin}\n        />\n      </>\n    )\n  }\n\n  return (\n    <div>\n      <Notification message={message} style={style} />\n      <h2>blogs</h2>\n      <div>\n        {username} logged in <button onClick={handleLogout}>logout</button>\n      </div>\n      <br />\n      <Togglable buttonLabel={'New blog'}>\n        <BlogForm\n          user={user}\n          blogs={blogs}\n          setBlogs={setBlogs}\n          setStyle={setStyle}\n          setMessage={setMessage}\n          handleCreate={handleCreate}\n        />\n      </Togglable>\n      {blogs.map((blog) => {\n        let showButton = false\n        if (blog.user) {\n          console.log(blog.user,user.username)\n          if (blog.user.username === user.username) {\n            showButton = true\n          }\n        }\n        return (\n          <Blog\n            key={blog.id}\n            blog={blog}\n            user={user}\n            deleteBlog={deleteBlog}\n            showButton={showButton}\n            updateBlog={updateBlog}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default App\n","/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/components/Notification.js",[],"/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/components/Blog.js",[],"/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/components/blogForm.js",[],"/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/components/LoginForm.js",[],"/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/services/blogs.js",["42"],"import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\nconst postBlog = async (newBlog, token) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` },\n  }\n  const response = await axios.post(baseUrl, newBlog,config)\n  return response.data\n}\nconst updateBlog=async(upBlog,token) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` },\n  }\n  const response=await axios.put(baseUrl+'/'+upBlog.id.toString(),upBlog,config)//Will have to include user id on upBlog\n  return response.data\n}\nconst deleteBlog=async(id,token) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` },\n  }\n  const response=await axios.delete(baseUrl+'/'+id.toString(),config)\n  return response.data\n}\nexport default { getAll, postBlog, updateBlog, deleteBlog }\n","/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/components/Togglable.js",[],"/Users/rafxar/fullstackopen-part11.21-11.22/front-end/src/services/login.js",["43"],"import axios from 'axios'\nconst baseUrl = '/api/login'\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n",{"ruleId":"44","severity":1,"message":"45","line":89,"column":13,"nodeType":"46","endLine":100,"endColumn":4},{"ruleId":"47","severity":1,"message":"48","line":29,"column":1,"nodeType":"49","endLine":29,"endColumn":60},{"ruleId":"47","severity":1,"message":"48","line":8,"column":1,"nodeType":"49","endLine":8,"endColumn":25},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]